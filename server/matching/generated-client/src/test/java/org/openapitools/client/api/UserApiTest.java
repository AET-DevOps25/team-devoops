/*
 * MeetAtMensa
 * This OpenAPI specification defines the endpoints, schemas, and security mechanisms for the Meet@Mensa User micro-service. 
 *
 * The version of the OpenAPI document: 2.1.4
 * Contact: devoops@tyrean.mozmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import java.util.UUID;
import org.openapitools.client.model.User;
import org.openapitools.client.model.UserNew;
import org.openapitools.client.model.UserUpdate;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UserApi
 */
@Disabled
public class UserApiTest {

    private final UserApi api = new UserApi();

    /**
     * Delete User with {user-id}
     *
     * Remove all information about user with ID {user-id} from user-service
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteApiV2UserUserIDTest() throws ApiException {
        UUID userId = null;
        api.deleteApiV2UserUserID(userId);
        // TODO: test validations
    }

    /**
     * Retrieve User with {user-id}
     *
     * Fetch all information about user with ID {user-id} from user-service
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getApiV2UserUserIDTest() throws ApiException {
        UUID userId = null;
        User response = api.getApiV2UserUserID(userId);
        // TODO: test validations
    }

    /**
     * Register new User
     *
     * Register a new user and respond with it&#39;s {user-id}
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postApiV2UserRegisterTest() throws ApiException {
        UserNew userNew = null;
        User response = api.postApiV2UserRegister(userNew);
        // TODO: test validations
    }

    /**
     * Update User with {user-id}
     *
     * Update all information about user with ID {user-id} from user-service
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putApiV2UserUserIDTest() throws ApiException {
        UUID userId = null;
        UserUpdate userUpdate = null;
        User response = api.putApiV2UserUserID(userId, userUpdate);
        // TODO: test validations
    }

}
