name: Deploy Docker Images to AWS

on:
  workflow_dispatch:
  workflow_call:
  push:
    branches:
      - main
      #remove when pr is merged to main
      - feature/deploy-images-aws

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: AWS
      url: "https://api.${{ vars.EC2_PUBLIC_IP }}.nip.io"
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Copy Docker Compose File From Repo to VM Host
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ vars.EC2_PUBLIC_IP }}
          username: ${{ vars.AWS_EC2_USER }}
          key: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
          source: "deployment/compose.aws.yml"
          target: /home/${{ vars.AWS_EC2_USER }}/deployment
          strip_components: 1
          overwrite: true

      - name: SSH to VM and Create .env.prod
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ vars.EC2_PUBLIC_IP }}
          username: ${{ vars.AWS_EC2_USER }}
          key: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
          script: |
            cd /home/${{ vars.AWS_EC2_USER }}
            rm -f .env.prod
            touch .env.prod
            echo "EC2_PUBLIC_IP=${{ vars.EC2_PUBLIC_IP }}" >> .env.prod
            echo "CLIENT_HOST=client.${{ vars.EC2_PUBLIC_IP }}.nip.io" >> .env.prod
            echo "SERVER_HOST=api.${{ vars.EC2_PUBLIC_IP }}.nip.io" >> .env.prod
            echo "PUBLIC_API_URL=https://api.${{ vars.EC2_PUBLIC_IP }}.nip.io" >> .env.prod

      - name: SSH to VM and Execute Docker-Compose Up
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ vars.EC2_PUBLIC_IP }}
          username: ${{ vars.AWS_EC2_USER }}
          key: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
          script: |
            cd /home/${{ vars.AWS_EC2_USER }}
            echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            docker compose -f deployment/compose.aws.yml --env-file=/home/${{ vars.AWS_EC2_USER }}/.env.prod up -d
