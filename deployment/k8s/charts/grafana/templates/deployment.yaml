apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "grafana.fullname" . }}
  labels:
    {{- include "grafana.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "grafana.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "grafana.selectorLabels" . | nindent 8 }}
    spec:
      securityContext:
        fsGroup: 472
        supplementalGroups:
          - 0
      initContainers:
        - name: init-chown-data
          image: "{{ .Values.grafana.image.repository }}:{{ .Values.grafana.image.tag }}"
          command: ["chown", "-R", "472:472", "/var/lib/grafana"]
          volumeMounts:
            - name: storage-volume
              mountPath: /var/lib/grafana
          securityContext:
            runAsUser: 0
      containers:
        - name: grafana
          image: "{{ .Values.grafana.image.repository }}:{{ .Values.grafana.image.tag }}"
          imagePullPolicy: {{ .Values.grafana.image.pullPolicy }}
          env:
            - name: GF_SECURITY_ADMIN_USER
              value: {{ .Values.grafana.adminUser | quote }}
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: {{ .Values.grafana.adminPassword | quote }}
            - name: GF_INSTALL_PLUGINS
              value: "grafana-piechart-panel,grafana-worldmap-panel"
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 60
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 30
            timeoutSeconds: 30
          resources:
            {{- toYaml .Values.grafana.resources | nindent 12 }}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/grafana/grafana.ini
              subPath: grafana.ini
            - name: datasources-volume
              mountPath: /etc/grafana/provisioning/datasources
            - name: storage-volume
              mountPath: /var/lib/grafana
          securityContext:
            runAsUser: 472
            runAsGroup: 472
            fsGroup: 472
      volumes:
        - name: config-volume
          configMap:
            name: {{ include "grafana.fullname" . }}-config
        - name: datasources-volume
          configMap:
            name: {{ include "grafana.fullname" . }}-datasources
        {{- if .Values.grafana.storage.persistentVolumeClaim.enabled }}
        - name: storage-volume
          persistentVolumeClaim:
            claimName: {{ include "grafana.fullname" . }}-pvc
        {{- else }}
        - name: storage-volume
          emptyDir: {}
        {{- end }} 