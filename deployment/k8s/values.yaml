# Global values for Meet@Mensa application
global:
  environment: production

# Application components
client:
  enabled: true
  replicaCount: 1

gateway:
  enabled: true
  replicaCount: 1

user:
  enabled: true
  replicaCount: 1

matching:
  enabled: true
  replicaCount: 1

genai:
  enabled: true
  replicaCount: 1

# Monitoring stack configuration
prometheus:
  enabled: true
  image:
    repository: prom/prometheus
    tag: "v2.45.0"
    pullPolicy: IfNotPresent

  service:
    type: ClusterIP
    port: 9090
    targetPort: 9090

  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "500m"

  storage:
    persistentVolumeClaim:
      enabled: false
      size: 10Gi
      storageClass: ""

  config:
    global:
      scrape_interval: 15s
      evaluation_interval: 15s

    rule_files:
      - /etc/prometheus/rules/*.yaml

    scrape_configs:
      - job_name: "prometheus"
        static_configs:
          - targets: ["localhost:9090"]

      - job_name: "kubernetes-pods"
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels:
              [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels:
              [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name

grafana:
  enabled: true
  image:
    repository: grafana/grafana
    tag: "10.0.0"
    pullPolicy: IfNotPresent

  service:
    type: ClusterIP
    port: 80
    targetPort: 3000

  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "200m"

  storage:
    persistentVolumeClaim:
      enabled: true
      size: 5Gi
      storageClass: ""

  adminUser: admin
  adminPassword: admin

  datasources:
    prometheus:
      enabled: true
      url: http://meetatmensa-prometheus:9090
      access: proxy
      isDefault: true
    loki:
      enabled: true
      url: http://meetatmensa-loki:3100
      access: proxy
      isDefault: false

  dashboards:
    default:
      enabled: true
      title: "Default Dashboard"
      uid: "default"
      panels: []

loki:
  enabled: true
  image:
    repository: grafana/loki
    tag: "2.9.0"
    pullPolicy: IfNotPresent

  service:
    type: ClusterIP
    port: 3100
    targetPort: 3100

  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "500m"

  storage:
    persistentVolumeClaim:
      enabled: false
      size: 10Gi
      storageClass: ""

  config:
    auth_enabled: false
    server:
      http_listen_port: 3100
    ingester:
      lifecycler:
        address: 127.0.0.1
        ring:
          kvstore:
            store: inmemory
          replication_factor: 1
        final_sleep: 0s
      chunk_idle_period: 5m
      chunk_retain_period: 30s
    schema_config:
      configs:
        - from: 2020-10-24
          store: boltdb-shipper
          object_store: filesystem
          schema: v11
          index:
            prefix: index_
            period: 24h
    storage_config:
      boltdb_shipper:
        active_index_directory: /tmp/loki/boltdb-shipper-active
        cache_location: /tmp/loki/boltdb-shipper-cache
        cache_ttl: 24h
        shared_store: filesystem
      filesystem:
        directory: /tmp/loki/chunks
    limits_config:
      enforce_metric_name: false
      reject_old_samples: true
      reject_old_samples_max_age: 168h
    chunk_store_config:
      max_look_back_period: 0s
    table_manager:
      retention_deletes_enabled: false
      retention_period: 0s

promtail:
  enabled: true
  image:
    repository: grafana/promtail
    tag: "2.9.0"
    pullPolicy: IfNotPresent

  resources:
    requests:
      memory: "64Mi"
      cpu: "50m"
    limits:
      memory: "128Mi"
      cpu: "100m"

  config:
    server:
      http_listen_port: 9080
      grpc_listen_port: 0

    positions:
      filename: /tmp/positions.yaml

    clients:
      - url: http://RELEASE_NAME-loki:3100/loki/api/v1/push

    scrape_configs:
      - job_name: system
        static_configs:
          - targets:
              - localhost
            labels:
              job: varlogs
              __path__: /var/log/*log
        pipeline_stages:
          - docker: {}
